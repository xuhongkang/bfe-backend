import type { NodeRef } from "./NodeRef";
import { NamedReference, Reference } from "./Reference";
import type { Param } from "./Param";
export type RelationshipInput = {
    source: NodeRef;
    target: NodeRef;
    type?: string;
};
export type RelationshipProperties = Record<string, Param<unknown>>;
type RelationshipRefOptions = {
    type?: string;
};
/** Reference to a relationship property
 * @group References
 */
export declare class RelationshipRef extends Reference {
    private _type;
    constructor(input?: RelationshipRefOptions);
    get type(): string | undefined;
}
/** Represents a relationship reference with a given name
 * @group References
 */
export declare class NamedRelationship extends RelationshipRef implements NamedReference {
    readonly id: string;
    constructor(id: string, options?: RelationshipRefOptions);
    get name(): string;
}
export {};
